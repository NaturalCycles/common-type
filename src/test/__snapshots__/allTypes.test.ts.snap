// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`allTypes 1`] = `
Array [
  Object {
    "$id": "DailyEntryBM.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "cervicalMucusConsistency": Object {
        "$ref": "CervicalMucusConsistency.schema.json",
      },
      "cervicalMucusQuantity": Object {
        "$ref": "DataQuantity.schema.json",
      },
      "covidTest": Object {
        "$ref": "TestResult.schema.json",
      },
      "dataFlags": Object {
        "items": Object {
          "$ref": "DataFlag.schema.json",
        },
        "type": "array",
      },
      "date": Object {
        "type": "string",
      },
      "deviationReason": Object {
        "$ref": "DeviationReason.schema.json",
      },
      "lhTest": Object {
        "$ref": "TestResult.schema.json",
      },
      "libido": Object {
        "$ref": "Libido.schema.json",
      },
      "mens": Object {
        "$ref": "Mens.schema.json",
      },
      "mensQuantity": Object {
        "$ref": "DataQuantity.schema.json",
      },
      "notes": Object {
        "type": "string",
      },
      "pregTest": Object {
        "$ref": "TestResult.schema.json",
      },
      "sex": Object {
        "$ref": "HadSex.schema.json",
      },
      "sexType": Object {
        "$ref": "SexType.schema.json",
      },
      "skipped": Object {
        "type": "boolean",
      },
      "source": Object {
        "type": "string",
      },
      "temperature": Object {
        "type": "number",
      },
      "temperatureMeasuredTimestamp": Object {
        "type": "number",
      },
      "temperatureUpdatedTimestamp": Object {
        "type": "number",
      },
      "updated": Object {
        "type": "number",
      },
    },
    "required": Array [
      "date",
      "dataFlags",
    ],
    "type": "object",
  },
  Object {
    "$id": "DataFlag.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      45,
      31,
      32,
      40,
      41,
      42,
      43,
      44,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
    ],
  },
  Object {
    "$id": "DeviationReason.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      -1,
      1,
      2,
      3,
      4,
    ],
  },
  Object {
    "$id": "Consent.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      "YES",
      "NO",
    ],
  },
  Object {
    "$id": "NumberEnum.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
    ],
  },
  Object {
    "$id": "Person.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": true,
    "description": "Person type comment",
    "properties": Object {
      "age": Object {
        "type": "number",
      },
      "name": Object {
        "type": "string",
      },
    },
    "required": Array [
      "name",
    ],
    "type": "object",
  },
  Object {
    "$id": "BaseAddress.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a1": Object {
        "items": Object {
          "type": "string",
        },
        "type": "array",
      },
      "a2": Object {
        "items": Object {
          "items": Object {
            "type": "string",
          },
          "type": "array",
        },
        "type": "array",
      },
      "address1": Object {
        "type": "string",
      },
      "address2": Object {
        "type": "string",
      },
      "c": Object {
        "$ref": "Consent.schema.json",
      },
      "home": Object {
        "type": "boolean",
      },
      "int": Object {
        "type": "integer",
      },
      "n": Object {
        "$ref": "NumberEnum.schema.json",
      },
      "o1": Object {
        "additionalProperties": false,
        "properties": Object {
          "a": Object {
            "type": "string",
          },
          "b": Object {
            "type": "number",
          },
        },
        "required": Array [
          "a",
          "b",
        ],
        "type": "object",
      },
      "p": Object {
        "$ref": "Person.schema.json",
      },
      "ts": Object {
        "description": "asdf

la la la",
        "type": "number",
      },
    },
    "required": Array [
      "address1",
    ],
    "type": "object",
  },
  Object {
    "$id": "SuperAddress.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": Array [
      Object {
        "additionalProperties": false,
        "properties": Object {
          "address3": Object {
            "type": "string",
          },
        },
        "required": Array [
          "address3",
        ],
        "type": "object",
      },
      Object {
        "$ref": "BaseAddress.schema.json",
      },
      Object {
        "$ref": "Person.schema.json",
      },
    ],
  },
  Object {
    "$id": "Type2.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "s": Object {
        "type": "string",
      },
    },
    "required": Array [],
    "type": "object",
  },
  Object {
    "$id": "TestType.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "intersect": Object {
        "allOf": Array [
          Object {
            "$ref": "Person.schema.json",
          },
          Object {
            "additionalProperties": false,
            "properties": Object {
              "id": Object {
                "type": "string",
              },
            },
            "required": Array [
              "id",
            ],
            "type": "object",
          },
        ],
      },
      "lhdays": Object {
        "items": Object {
          "items": Array [
            Object {
              "type": "number",
            },
            Object {
              "type": "number",
            },
          ],
          "maxItems": 2,
          "minItems": 2,
          "type": "array",
        },
        "type": "array",
      },
      "lit": Object {
        "const": "some string",
      },
      "litb": Object {
        "const": true,
      },
      "n": Object {
        "type": "null",
      },
      "nlit": Object {
        "const": 26,
      },
      "p": Object {
        "items": Object {
          "oneOf": Array [
            Object {
              "$ref": "Person.schema.json",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "type": "array",
      },
      "s": Object {
        "type": "string",
      },
      "s2": Object {
        "oneOf": Array [
          Object {
            "type": "string",
          },
          Object {
            "type": "null",
          },
        ],
      },
    },
    "required": Array [
      "s",
      "n",
      "s2",
      "p",
      "lhdays",
    ],
    "type": "object",
  },
  Object {
    "$id": "TestPartialType.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "part": Object {
        "$ref": "PersonPartial.schema.json",
      },
      "req": Object {
        "$ref": "PersonRequired.schema.json",
      },
    },
    "required": Array [],
    "type": "object",
  },
  Object {
    "$id": "TestRecordType.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "r": Object {
        "additionalProperties": false,
        "patternProperties": Object {
          ".*": Object {
            "type": "number",
          },
        },
        "required": Array [],
        "type": "object",
      },
      "strMap": Object {
        "additionalProperties": false,
        "patternProperties": Object {
          ".*": Object {
            "type": "number",
          },
        },
        "properties": Object {},
        "required": Array [
          "req",
        ],
        "type": "object",
      },
    },
    "required": Array [
      "strMap",
    ],
    "type": "object",
  },
  Object {
    "$id": "AirtableId.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "string",
  },
  Object {
    "$id": "C.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "a": Object {
        "type": "string",
      },
      "maybe": Object {
        "type": "string",
      },
      "s": Object {
        "type": "string",
      },
    },
    "required": Array [
      "s",
      "a",
    ],
    "type": "object",
  },
  Object {
    "$id": "UFColor.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
    ],
  },
  Object {
    "$id": "Goal.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      "PREVENT",
      "PLAN",
      "PREGNANT",
    ],
  },
  Object {
    "$id": "BaseColorCode.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "cd": Object {
        "type": "number",
      },
      "code": Object {
        "$ref": "UFCode.schema.json",
      },
      "color": Object {
        "$ref": "UFColor.schema.json",
      },
      "date": Object {
        "type": "string",
      },
      "goal": Object {
        "$ref": "Goal.schema.json",
      },
      "lhStatus": Object {
        "$ref": "LHStatus.schema.json",
      },
      "nCycle": Object {
        "type": "number",
      },
      "ovulationStatus": Object {
        "$ref": "OvulationStatus.schema.json",
      },
      "pregnancyTestStatus": Object {
        "$ref": "PregnancyTestStatus.schema.json",
      },
      "redscale": Object {
        "type": "number",
      },
    },
    "required": Array [
      "date",
      "color",
      "code",
      "cd",
      "nCycle",
      "goal",
    ],
    "type": "object",
  },
  Object {
    "$id": "UFColorCode.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": Array [
      Object {
        "additionalProperties": false,
        "properties": Object {
          "cycleStartDate": Object {
            "type": "string",
          },
        },
        "required": Array [
          "cycleStartDate",
        ],
        "type": "object",
      },
      Object {
        "$ref": "BaseColorCode.schema.json",
      },
    ],
  },
  Object {
    "$id": "UFPredictionColorCode.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": Array [
      Object {
        "additionalProperties": false,
        "properties": Object {
          "dataFlags": Object {
            "items": Object {
              "$ref": "DataFlag.schema.json",
            },
            "type": "array",
          },
          "mensQuantity": Object {
            "$ref": "DataQuantity.schema.json",
          },
        },
        "required": Array [],
        "type": "object",
      },
      Object {
        "$ref": "BaseColorCode.schema.json",
      },
    ],
  },
  Object {
    "$id": "OvulationPrediction.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      "OVULATION",
      "WINDOW1",
      "WINDOW2",
    ],
  },
  Object {
    "$id": "LHStatus.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
      5,
      6,
    ],
  },
  Object {
    "$id": "OvulationStatus.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
      5,
      6,
    ],
  },
  Object {
    "$id": "PregnancyTestStatus.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
    ],
  },
  Object {
    "$id": "TestResult.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
    ],
  },
  Object {
    "$id": "Mens.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
    ],
  },
  Object {
    "$id": "HadSex.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
    ],
  },
  Object {
    "$id": "DataQuantity.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
    ],
  },
  Object {
    "$id": "SexType.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
    ],
  },
  Object {
    "$id": "CervicalMucusConsistency.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
    ],
  },
  Object {
    "$id": "Libido.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
    ],
  },
  Object {
    "$id": "CurrentPhaseId.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "enum": Array [
      1,
      2,
      3,
      4,
      5,
    ],
  },
  Object {
    "$id": "CycleSummary.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "cycleLength": Object {
        "type": "number",
      },
      "endDate": Object {
        "type": "string",
      },
      "lhTestNegative": Object {
        "type": "number",
      },
      "lhTestPositive": Object {
        "type": "number",
      },
      "mensLength": Object {
        "type": "number",
      },
      "nCycle": Object {
        "type": "number",
      },
      "ovulationCD": Object {
        "type": "number",
      },
      "ovulationDate": Object {
        "type": "string",
      },
      "pregnancyEndDate": Object {
        "type": "string",
      },
      "spottingDays": Object {
        "type": "number",
      },
      "startDate": Object {
        "type": "string",
      },
      "unprotectedSex": Object {
        "type": "number",
      },
    },
    "required": Array [
      "startDate",
      "endDate",
      "nCycle",
      "cycleLength",
      "mensLength",
    ],
    "type": "object",
  },
  Object {
    "$id": "CurrentPhase.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "dataFlags": Object {
        "items": Object {
          "$ref": "DataFlag.schema.json",
        },
        "type": "array",
      },
      "id": Object {
        "$ref": "CurrentPhaseId.schema.json",
      },
      "libido": Object {
        "$ref": "Libido.schema.json",
      },
      "trackersGeneric": Object {
        "type": "boolean",
      },
    },
    "required": Array [
      "id",
      "dataFlags",
    ],
    "type": "object",
  },
  Object {
    "$id": "UserFertilityStats.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "highTempMean": Object {
        "type": "number",
      },
      "highTempRMS": Object {
        "type": "number",
      },
      "lowTempMean": Object {
        "type": "number",
      },
      "lowTempRMS": Object {
        "type": "number",
      },
      "pregTempMean": Object {
        "type": "number",
      },
      "pregTempRMS": Object {
        "type": "number",
      },
    },
    "required": Array [],
    "type": "object",
  },
  Object {
    "$id": "UserFertility.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": Array [
      Object {
        "additionalProperties": false,
        "properties": Object {
          "algoVersion": Object {
            "type": "string",
          },
          "clave": Object {
            "type": "number",
          },
          "claveRMS": Object {
            "type": "number",
          },
          "colorMap": Object {
            "additionalProperties": false,
            "patternProperties": Object {
              ".*": Object {
                "$ref": "UFColorCode.schema.json",
              },
            },
            "required": Array [],
            "type": "object",
          },
          "conceptionDate": Object {
            "type": "string",
          },
          "currentPhase": Object {
            "$ref": "CurrentPhase.schema.json",
          },
          "cycleLengths": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "cycleSummaries": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "$ref": "CycleSummary.schema.json",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "dataActivity": Object {
            "type": "number",
          },
          "dueDate": Object {
            "type": "string",
          },
          "entryMap": Object {
            "additionalProperties": false,
            "patternProperties": Object {
              ".*": Object {
                "$ref": "DailyEntryBM.schema.json",
              },
            },
            "required": Array [],
            "type": "object",
          },
          "fahrenheit": Object {
            "description": "Can be undefined in older versions of UserFertilityCache!",
            "type": "boolean",
          },
          "greenDays": Object {
            "type": "number",
          },
          "greenbfO": Object {
            "type": "number",
          },
          "lastDate": Object {
            "type": "string",
          },
          "lhdays": Object {
            "items": Object {
              "items": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "number",
                },
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array",
            },
            "type": "array",
          },
          "lpave": Object {
            "type": "number",
          },
          "lpaveRMS": Object {
            "type": "number",
          },
          "mdays": Object {
            "type": "number",
          },
          "mdaysRMS": Object {
            "type": "number",
          },
          "mensLengths": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "minPossiblePregnancyEndedDate": Object {
            "type": "string",
          },
          "ncycles": Object {
            "type": "number",
          },
          "noOCycles": Object {
            "items": Object {
              "type": "boolean",
            },
            "type": "array",
          },
          "oave": Object {
            "type": "number",
          },
          "oaveRMS": Object {
            "type": "number",
          },
          "ovulationDays": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "ovulationWindowMax": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "ovulationWindowMin": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "predOvulationDays": Object {
            "items": Object {
              "oneOf": Array [
                Object {
                  "type": "number",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "type": "array",
          },
          "predictionMap": Object {
            "additionalProperties": false,
            "patternProperties": Object {
              ".*": Object {
                "$ref": "UFPredictionColorCode.schema.json",
              },
            },
            "required": Array [],
            "type": "object",
          },
          "pregnantNow": Object {
            "type": "boolean",
          },
          "redDays": Object {
            "type": "number",
          },
          "startDate": Object {
            "type": "string",
          },
          "todayDate": Object {
            "type": "string",
          },
          "v": Object {
            "type": "number",
          },
          "yellowDays": Object {
            "type": "number",
          },
        },
        "required": Array [
          "v",
          "startDate",
          "todayDate",
          "lastDate",
          "greenDays",
          "redDays",
          "yellowDays",
          "dataActivity",
          "noOCycles",
          "cycleLengths",
          "ovulationDays",
          "predOvulationDays",
          "ovulationWindowMin",
          "ovulationWindowMax",
          "mensLengths",
          "lhdays",
          "clave",
          "claveRMS",
          "greenbfO",
          "lpave",
          "lpaveRMS",
          "mdays",
          "ncycles",
          "oave",
          "oaveRMS",
          "pregnantNow",
          "entryMap",
          "colorMap",
          "predictionMap",
        ],
        "type": "object",
      },
      Object {
        "$ref": "UserFertilityStats.schema.json",
      },
    ],
  },
  Object {
    "$id": "UFCode.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": Object {
      "checkLh": Object {
        "type": "boolean",
      },
      "checkPreg": Object {
        "type": "boolean",
      },
      "defMisc": Object {
        "type": "boolean",
      },
      "defPreg": Object {
        "type": "boolean",
      },
      "mens": Object {
        "type": "boolean",
      },
      "ovulation": Object {
        "description": "Confirmed ovulation (if in the past).
In the future - we don't use it:)",
        "type": "boolean",
      },
      "ovulationPrediction": Object {
        "$ref": "OvulationPrediction.schema.json",
        "description": "Frontend-only field to display \\"OvulationWindow'.",
      },
      "possMisc": Object {
        "type": "boolean",
      },
      "possPreg": Object {
        "type": "boolean",
      },
    },
    "required": Array [],
    "type": "object",
  },
  Object {
    "$id": "PersonPartial.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": true,
    "description": "Person type comment",
    "properties": Object {
      "age": Object {
        "type": "number",
      },
      "name": Object {
        "type": "string",
      },
    },
    "required": Array [],
    "type": "object",
  },
  Object {
    "$id": "PersonRequired.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": true,
    "description": "Person type comment",
    "properties": Object {
      "age": Object {
        "type": "number",
      },
      "name": Object {
        "type": "string",
      },
    },
    "required": Array [
      "name",
      "age",
    ],
    "type": "object",
  },
]
`;
